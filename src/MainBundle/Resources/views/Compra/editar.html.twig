{% extends "base.html.twig" %}
{% block stylesheets %}
    {{ parent() }}
    {% stylesheets  'Metronic/assets/global/plugins/jquery-handsontable/handsontable.full.css'
                    'Metronic/assets/global/plugins/jquery-handsontable/handsontable.bootstrap.css' filter='cssrewrite' %}
    <link rel="stylesheet" type="text/css" media="screen" href="{{ asset_url }}"  />
    {% endstylesheets %}
{% endblock %}


{% block content %}
    <div class="row">
        <!-- col -->
        <div class="col-md-12">
            <h3 class="page-title"> Gesti√≥n de Compras
                <small> > editar compra</small>
            </h3>    
        </div>
        <!-- end col -->
    </div>
    <div id="mensaje" ></div>
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!-- row -->
        <div class="row">
            <!-- NEW WIDGET START -->
            <div class="col-md-12">
                <div class="portlet light bordered">
                    <div class="portlet-title">
                        <div class="caption font-dark">
                            <i class="icon-settings font-dark"></i>
                            <span class="caption-subject bold uppercase"> Compra</span>
                        </div>
                    </div>
                    <div class="portlet-body">
                        <div class="table-toolbar">
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label class="col-md-2 control-label" style="padding-top: 7px;">Fecha:</label>
                                        <div class="col-md-10">
                                            <input class="form-control datepicker filters" style="position: relative; z-index: 100000;" id="txtFecha" type="text" data-dateformat="dd/mm/yy" value="{{ "now"|date("d/m/Y")}}">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label class="col-md-3 control-label" style="padding-top: 7px;">Proveedor:</label>
                                        <div class="col-md-9">
                                            <select id="cmbProveedor" class="filters" style="width:100%">
                                                <option value="">Ingrese un proveedor...</option>
                                                {% for proveedor in proveedores %}
                                                    <option value="{{ proveedor.id }}">{{ proveedor.nombre }}</option>
                                                {% endfor %}
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label class="col-md-2 control-label" style="padding-top: 7px;">Rubro:</label>
                                        <div class="col-md-9">
                                            <select id="cmbRubro" class="filters" style="width:100%">
                                                <option value="">Ingrese un rubro...</option>
                                                {% for rubro in rubros %}
                                                    <option value="{{ rubro.descripcion }}">{{ rubro.descripcion }}</option>
                                                {% endfor %}
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <a class="btn btn-primary" id="save">Guardar</a>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                <input type="hidden" id="totalizador" value="0">
                                <input type="hidden" name="tipo" id="tipo" value="editar">
                                <input type="hidden" name="compraId" id="compraId" value="{{ id }}" />
                                <div id="example6" style="width:100%;"></div>
                            </div>
                        </div> 
                    </div>
                </div>
            </div>
            <!-- WIDGET END -->
        </div>
        <!-- end row -->
    </section>
    <!-- end widget grid -->
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {% javascripts 'Metronic/assets/global/plugins/jquery-handsontable/handsontable.full.js'
    %}
    <script src="{{ asset_url }}" type="text/javascript"></script>
    {% endjavascripts %}

    <script type="text/javascript">
        $(document).ready(function () {
            $('#cmbProveedor, #cmbRubro').select2();
            var myData, cantidadCambios = 0;
            var $container = $("#example6");
            var $console = $("#info");
            $container.handsontable({
                colHeaders: ['Cantidad', 'Insumo', 'Rubro', 'Precio unitario', 'Precio total'],
                columns: [
                    {data: 0, type: 'numeric', format: '0,0.000', allowInvalid: false},
                    {data: 1, readOnly: true},
                    {data: 2, readOnly: true},
                    {data: 3, type: 'numeric', format: '0,0.000', allowInvalid: false},
                    {data: 4, type: 'numeric', format: '0,0.000', allowInvalid: false}
                ],
                columnSorting: true,
                stretchH: "all",
                tableClassName: ['table', 'table-hover', 'table-striped'],
                afterChange: function (change, source) {
                    if (source === 'edit') {
                        cantidadCambios++;
                        $console.text(cantidadCambios + ' Cambio/s realizados.');
                        var datarow = $container.handsontable('getDataAtRow', change[0][0]);
                        var row, col, r_len, c_len;
                        for (row = 0, r_len = myData.length; row < r_len; row++) {
                            for (col = 0, c_len = myData[row].length; col < c_len; col++) {
                                if (myData[row][col] == datarow[5]) {
                                    myData[row][col] = change[0][3];
                                }
                            }
                        }
                        
                        //Calcular los totales
                        if (source !== 'sum') {
                            var cantidad, precioUnitario, precioTotal, sum, i;
                            var totalizador = parseFloat($("#totalizador").html(), 3);

                            for (var i = 0; i < change.length; i++) {
                                var cambio = change[i];
                                var row = cambio[0];

                                cantidad = this.getDataAtCell(row, 0);
                                precioUnitario = this.getDataAtCell(row, 3);
                                precioTotal = this.getDataAtCell(row, 4);
                                var precioTotalPosterior = precioTotal;
                                var precioTotalAnterior = precioTotal;

                                if (cambio[1] === 3) {
                                    precioTotal = calcularTotal(cantidad, precioUnitario);
                                    precioTotalPosterior = precioTotal;
                                    this.setDataAtCell(cambio[0], 4, precioTotal, 'sum');

                                    totalizador += (precioTotalPosterior - precioTotalAnterior);
                                    var totalformato = totalizador.toFixed(2);
                                    $("#totalizador").html(totalformato);
                                }

                                if (cambio[1] === 4) {
                                    precioUnitario = calcularUnitario(cantidad, precioTotal);
                                    precioTotalPosterior = cambio[3];
                                    precioTotalAnterior = cambio[2];
                                    this.setDataAtCell(cambio[0], 3, precioUnitario, 'sum');

                                    totalizador += (precioTotalPosterior - precioTotalAnterior);
                                    var totalformato = totalizador.toFixed(2);
                                    $("#totalizador").html(totalformato);
                                }
                                //totalizador
                                if (precioTotal == null || typeof precioTotal == "undefined" || precioTotal == "") {
                                    precioTotal = 0;
                                }

                                if (typeof cambio[2] == "undefined" || cambio[2] == "") {
                                    cambio[2] = 0;
                                }

                            }
                        }
                    }
                }
            });



            function actualizarGrilla() {

                $.ajax({
                    url: Routing.generate('compra_listar_detalle'),
                    data: {
                        compraId: function () {
                            return $("#compraId").val();
                        }
                    },
                    dataType: 'json',
                    type: 'POST',
                    success: function (res) {
                        myData = res;
                        $container.handsontable('loadData', res);
                        $console.text('Mercader√≠a Cargada.');
                    }
                });
            }
            ;

            function calcularTotal(cantidad, precioUnitario) {
                return parseFloat(cantidad * precioUnitario, 3);
            }
            ;
            function calcularUnitario(cantidad, precioTotal) {
                return parseFloat(precioTotal / cantidad, 3);
            }
            ;

            $('#cmbRubro').on('change', function (event) {
                var value = ('' + this.value).toLowerCase(), row, col, r_len, c_len;
                var data = myData;
                var searcharray = [];
                if (typeof value != "undefined") {
                    for (row = 0, r_len = data.length; row < r_len; row++) {
                        for (col = 0, c_len = data[row].length; col < c_len; col++) {
                            if (data[row][2] == null) {
                                continue;
                            }
                            if (('' + data[row][2]).toLowerCase().indexOf(value) > -1) {
                                searcharray.push(data[row]);
                                break;
                            }
                        }
                    }
                    $container.handsontable('loadData', searcharray);
                }
            });

            actualizarGrilla();

            $('#save').click(function () {
                var idCompra = $("#compraId").val();
                var fecha = $("#txtFecha").val();
                var proveedor = $("#cmbProveedor").val();
                var total = $("#totalizador").html();
                var tipo = $("#tipo").val();
                var arrayData = [];
                myData.forEach(function (item) {
                    var res = [];
                    if (item[0] != null && item[3] != null && item[4] != null) {
                        if (item[0] != "" && item[3] != "" && item[4] != "") {
                            if (item[0] != "0" && item[3] != "" && item[4] != "") {
                                res[0] = item[0];
                                res[1] = item[5];
                                res[2] = item[3]
                                res[3] = item[4];
                                arrayData.push(res);
                                validar_contenido = "1";
                            }
                        }
                    }
                });
                if (proveedor == "") {
                    if ($(".has-error").val() != "") {
                        $('#cmbProveedor').closest('.proveedor').append("<span for='cmbProveedor' class='help-block'>Debe elegir un proveedor</span>").addClass('has-error');
                    }
                }
                else {
                    $.ajax({
                        url: Routing.generate('compra_guardar'),
                        dataType: 'json',
                        type: 'POST',
                        async: false,
                        data: {
                            "tipo": tipo,
                            "data": arrayData,
                            "idCompra": idCompra,
                            "fecha": fecha,
                            "proveedor": proveedor,
                            "total": total
                        },
                        success: function (result) {
                            $("#save").prop('disabled', true);
                            window.location.href = "{{ path('compra_listar') }}";
                        },
                        error: function (xhr, textStatus, errorThrow) {
                            $("#mensaje").html('<div id="prefix_582245866088" class="custom-alerts alert alert-danger fade in"><button type="button" class="close" data-dismiss="alert" aria-hidden="true"></button><i class="fa-lg fa fa-warning"></i> ' + xhr.responseJSON + '</div>');
                        }
                    });
                }
            });
        });
    </script>
{% endblock %}
